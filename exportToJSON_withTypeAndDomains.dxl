string myEscape(string str) {
	int str_index;
	Buffer escaped = create;
	escaped = "";

	for (str_index = 0; str_index < length(str); str_index++) {
		char c = str[str_index];
		if (c == '\n') {
			escaped += "\\n";
		} else if (c == '\t') {
			escaped += "\\t";
		} else if (c == '"') {
			escaped += "\\\"";
		} else if (c == '\\') {
			escaped += "\\\\";
		} else if (c == '\b') {
			escaped += "\\b";
		} else if (c == '\f') {
			escaped += "\\f";
		} else if (c == '\r') {
			escaped += "\\r";
		} else {
			escaped += c;
		}
	}

	return stringOf(escaped);
}

string urlEscape(string str) {
	int str_index;
	Buffer escaped = create;
	escaped = "";

	for (str_index = 0; str_index < length(str); str_index++) {
		char c = str[str_index];
		if (c == ' ') {
			escaped += "%20";
		} else if (c == 'Ä') {
			escaped += "%C3%84";
		} else if (c == 'Ö') {
			escaped += "%C3%96";
		} else if (c == 'Ü') {
			escaped += "%C3%9C";
		} else if (c == 'ä') {
			escaped += "%C3%A4";
		} else if (c == 'ö') {
			escaped += "%C3%B6";
		} else if (c == 'ü') {
			escaped += "%C3%BC";
		} else if (c == 'ß') {
			escaped += "%C3%9F";
		} else {
			escaped += c;
		}
	}

	return stringOf(escaped);
}

string getFileName(string moduleName) {
	DB fileNameBox = create(current, "Select Destination to Export", styleCentered|styleFixed);
	label(fileNameBox , "Please enter the file path");
	DBE fn = fileName(fileNameBox , "Output-File", moduleName, "*.json", "JSON", false);
	block fileNameBox;
	string fileName = get(fn);
	return fileName;
}

string getFileName() {
	return getFileName("fileName");
}

pragma runLim, 0
pragma encoding, "utf-8" 

Object o;
Module m;
m = current Module;

string proj = name(getParentFolder(m));
proj = urlEscape(proj);
string mod = name(m);
mod = urlEscape(mod);

AttrDef existing = find(m, "REQ Type");
AttrDef existingDomain = find(m, "REQ Domain");

Buffer buf = create;

buf += "{\"reqs\":";

buf += "[";
int count = 0;
for o in m do {
	int lvl = level(o);
	string txt = o.(NLS_("Object Text"));
	txt = myEscape(txt);
	string heading = o."Object Heading";
	heading = myEscape(heading);
	string objId = identifier(o);
	
	if (count > 0) {
		buf += ",";
	}
	buf += "{\"toolId\":\"" objId "\",\"text\":\"" txt "\",\"heading\":\"" heading "\",\"level\":" lvl "";
	
	if (null existing) {
	} else {
		string reqType = o."REQ Type";
		buf += ",\"reqType\":\"" reqType "\"";
	}
	if (null existingDomain) {
	} else {
		string reqDomains = o."REQ Domain";
		string dom = myEscape(reqDomains);
		buf += ",\"reqDomains\":\"" dom "\"";
	}
	buf += "}";
	count += 1;
}
buf += "],\"pds\":[";

AttrType at = find (current Module, "TDomains");
int i;
for (i = 0; i < at.size; i++) {
	if (i > 0) {
		buf += ",";
	}
	buf += "{\"domainName\":\"" at.strings[i] "\",";
	buf += "\"number\":" at.values[i] ",";
	buf += "\"color\":" at.colors[i] "}";
}

buf += "]}";

string tmpName;
tmpName = "export_" name(m);
string fname = getFileName(tmpName);
Stream out = write(fname, CP_UTF8);
out << buf;
close out;

delete(buf);

print "Successfully exported " count " requirements to " fname;